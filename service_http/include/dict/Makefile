###########################################################################
# Automatically generated by comake (1.0.1)  							  #
###########################################################################

#################设计系统参数#######################################
WORKROOT	?=	../../
IDLCC	:=	$(WORKROOT)/public/idlcompiler/output/bin/mcy
RPCCC :=  $(WORKROOT)/public/ubrpc/output/bin/ubrpcgen
CC	:=	gcc
CXX	:=	g++
LEX	:=	flex
YACC	:= yacc
CFLAGS	:=	-pipe -Wall -W -g -fPIC
CXXFLAGS	:=	-pipe -Wall -W -g -fPIC -O2 -fPIC -Wall -g
LEXFLAGS	:=	
YACCFLAGS	:=	
IDLFLAGS	:=  
LINKFLAGS	:=  -rdynamic
LINK	:=	g++
AR	:=	ar cqs
RANLIB	:=	
COMAKE	:=	comake

###############baidu lib 的32位 64位支持#################
HARDWARE_PLATFORM := $(shell uname -m)
ifeq ($(HARDWARE_PLATFORM),x86_64)
	lib2=lib2-64
	third=third-64
else
	lib2=lib2
	third=third
endif
##########################################

# 编译参数
DEP_INCPATH =  -I ../ullib//include/
DEP_LDFLAGS =  -L ../ullib//lib/
DEP_LDLIBS = -lullib
INCPATH =  -I. -I.
MAKDEP = Makefile.dep


#start target
first : all

############# 默认推到公式
.SUFFIXES: .c .cpp .cc .cxx .C .idl .des
.PRECIOUS: %.cpp

.cpp.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cc.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cxx.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.C.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.c.o:
	$(CC) -c -o $@ $<  $(CFLAGS) $(CPPFLAGS) $(INCPATH)

.idl.cpp:
	$(IDLCC) --ns=$(*F) -o $* $< $(CPPFLAGS) $(INCPATH) $(IDLFLAGS)

#############
###cpp 支持
%info : %
	ccp $<
#############


#__$MAKEFILE_RULES$__



###############编译目标
all :  target output 
.PHONY : all clean test output comake src conf 

target : libuldict.a 
#target : rpcidl libuldict.a 
#target : 
#__$target_CMDLINE$__

rpcidl : 

clean_rpcidl : 


test : 	./test_drdict	


comake :
	-make clean
	-comake 

#-include $(MAKDEP)
-include $(MAKDEP)

#----------------build target : libuldict.a--------------------

libuldict.a : CC := gcc
libuldict.a : CXX := g++
libuldict.a : CXXFLAGS := -pipe -Wall -W -g -fPIC -O2 -fPIC -Wall -g
libuldict.a : CPPFLAGS := -DLINUX -D_REENTRANT
libuldict.a : IDLFLAGS := 
libuldict.a : CFLAGS := -pipe -Wall -W -g -fPIC
libuldict.a : INCPATH :=  -I. -I. $(DEP_INCPATH)
libuldict.a : LDLIBS := -lcrypto -lm -lpthread -lullib -lcrypto -lm -lpthread $(DEP_LDLIBS)
libuldict.a : LDFLAGS :=  $(DEP_LDFLAGS)
libuldict.a : LINKFLAGS := -rdynamic

libuldict_a_SOURCES := $(wildcard comake_autogen.cpp ul_dict.cpp ul_prime.cpp ul_sign.cpp ul_url_sign.cpp)
#libuldict_a_HEADERS := $(wildcard *.h)
libuldict_a_HEADERS := *.h
libuldict_a_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
libuldict_a_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(libuldict_a_IDLSRC))
libuldict_a_IDLSRCH := $(patsubst %.idl,%.h, $(libuldict_a_IDLSRC))
libuldict_a_CONFDES := $(wildcard __$CONFDES$_VALUE$__ libuldict.a.des)
libuldict_a_CONFRANGE := $(patsubst %.des,%.range, $(libuldict_a_CONFDES))
libuldict_a_OBJS := $(libuldict_a_IDLSRC:.idl=.o)
libuldict_a_OBJS += $(libuldict_a_SOURCES:.c=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.cc=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.cpp=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.cxx=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.C=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.idl=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.yacc=.o)
libuldict_a_OBJS := $(libuldict_a_OBJS:.lex=.o)
libuldict.a : $(libuldict_a_OBJS) 
	rm -f $@ || echo 
	ar cr $@ $^


define libuldict_a_output
	mkdir -p output
	-mkdir -p output/lib
	-cp -rf libuldict.a output/lib
	-mkdir -p output/include
	-cp -rf $(libuldict_a_HEADERS) output/include
	`if [ -e "conf" ];then cp -rf conf output/ ;fi`

endef
	

define libuldict_a_clean
	-rm -rf $(libuldict_a_OBJS) $(libuldict_a_IDLSRCCPP) $(libuldict_a_IDLSRCH) libuldict.a.range conf/libuldict.a.range
	-rm -rf libuldict.a
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define libuldict_a_ccpc
	ccp $(libuldict_a_SOURCES) --formatter vim
endef
	

define libuldict_a_cov
	
endef
	



#---------------------end build target : libuldict.a------------------

#----------------build target : test_drdict--------------------

test_drdict : CC := gcc
test_drdict : CXX := g++
test_drdict : CXXFLAGS := -pipe -Wall -W -g -fPIC -O2 -fPIC -Wall -g
test_drdict : CPPFLAGS := -DLINUX -D_REENTRANT -DTEST_FUNC
test_drdict : IDLFLAGS := 
test_drdict : CFLAGS := -pipe -Wall -W -g -fPIC
test_drdict : INCPATH :=  -I. -I. $(DEP_INCPATH)
test_drdict : LDLIBS := -lcrypto -lm -lpthread -lullib -lcrypto -lm -lpthread -L. -luldict $(DEP_LDLIBS)
test_drdict : LDFLAGS :=  $(DEP_LDFLAGS)
test_drdict : LINKFLAGS := -rdynamic

test_drdict_SOURCES := $(wildcard ul_drdict.cpp ul_sign.cpp ul_prime.cpp)
#test_drdict_HEADERS := $(wildcard *.h)
test_drdict_HEADERS := *.h
test_drdict_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test_drdict_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test_drdict_IDLSRC))
test_drdict_IDLSRCH := $(patsubst %.idl,%.h, $(test_drdict_IDLSRC))
test_drdict_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test_drdict.des)
test_drdict_CONFRANGE := $(patsubst %.des,%.range, $(test_drdict_CONFDES))
test_drdict_OBJS := $(test_drdict_IDLSRC:.idl=.o)
test_drdict_OBJS += $(test_drdict_SOURCES:.c=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.cc=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.cpp=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.cxx=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.C=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.idl=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.yacc=.o)
test_drdict_OBJS := $(test_drdict_OBJS:.lex=.o)
test_drdict : $(test_drdict_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test_drdict_CONFDES);do cpp -C -o test_drdict.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test_drdict.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test_drdict_output
	
endef
	

define test_drdict_clean
	-rm -rf $(test_drdict_OBJS) $(test_drdict_IDLSRCCPP) $(test_drdict_IDLSRCH) test_drdict.range conf/test_drdict.range
	-rm -rf test_drdict
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test_drdict_ccpc
	ccp $(test_drdict_SOURCES) --formatter vim
endef
	

define test_drdict_cov
	
endef
	



#---------------------end build target : test_drdict------------------

define _output
	$(libuldict_a_output)
	$(test_drdict_output)
endef
	

define _clean
	$(libuldict_a_clean)
	$(test_drdict_clean)
endef
	

ccpc : 
	$(libuldict_a_ccpc)
	$(test_drdict_ccpc)

cov : 
	cov01 -1
	make clean
	make 
	cov01 -0



output : libuldict.a 
	$(_output)
	rm -rf $(MAKDEP)

$(MAKDEP) : $(wildcard comake_autogen.cpp ul_dict.cpp ul_prime.cpp ul_sign.cpp ul_url_sign.cpp ul_drdict.cpp)
	-$(CC) -MG -MM $(CPPFLAGS) $(INCPATH) $(DEP_INCPATH) $^ > $@

clean:
	$(_clean)
	rm -rf $(MAKDEP)


